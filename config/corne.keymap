/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        main_layer {
            display-name = "Main";

            //
            //  |---------------------------------------------------------| |--------------------------------------------------------|
            //  |   ESC   |   Q    |   W    |   E     |   R     |   T     | |    Y   |   U     |   I     |   O   |   P    |   BKSP   |
            //  |   TAB   |   A    |   S    |   D     |   F     |   G     | |    H   |   J     |   K     |   L   |   ;    |   '      |
            //  |   SHFT  |   Z    |   X    |   C     |   V     |   B     | |    N   |   M     |   ,     |   .   |   /    |   SHFT   |
            //  |---------------------------|   LGUI  |   SPC   |   LWR   | |    ENT |   RSE   |   ALT   |---------------------------|
            //                              |-----------------------------| |----------------------------|

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R      &kp T    &kp Y  &kp U    &kp I              &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F      &kp G    &kp H  &kp J    &kp K              &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B    &kp N  &kp M    &kp COMMA          &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LGUI  &kp SPACE  &mo 1    &mo 2  &kp RET  &kp RIGHT_COMMAND
            >;
        };

        navigation_layer {
            display-name = "Navigation";

            //
            //  |-------------------------------------------------------------------------------------| |------------------------------------------------------|
            //  |   ESC    |   1           | 2             | 3             | 4             | 5        | | 6      | 7      | 8      | 9       | 0    |   BKSP   |
            //  |   BT_CLR |   BT_SEL 0    | BT_SEL 1      | BT_SEL 2      | BT_SEL 3      | BT_SEL 4 | | LEFT   | DOWN   | UP     | RIGHT   |      |          |
            //  |   SHFT   |   RGB_TOG     | RGB_EFF       | RGB_BRI       | RGB_BRD       |          | |        |        |        |         |      |          |
            //  |------------------------------------------| LGUI          |               | SPACE    | | RET    |        | RALT   |---------------------------|
            //                                             |------------------------------------------| |--------------------------|

            bindings = <
&trans        &kp INSERT      &kp F13           &kp N3        &kp N4            &kp N5          &kp PAGE_UP    &kp LA(LEFT_ARROW)  &kp UP_ARROW       &kp LA(RIGHT_ARROW)  &kp N0  &kp BSPC
&kp CAPSLOCK  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp CAPSLOCK    &kp PAGE_DOWN  &kp LEFT_ARROW      &kp DOWN_ARROW     &kp RIGHT            &trans  &kp BACKSPACE
&kp LSHFT     &kp LG(Z)       &kp LG(X)         &kp LG(C)     &kp LG(V)         &trans          &trans         &kp HOME            &kp LS(LG(SPACE))  &kp END              &trans  &kp RIGHT_SHIFT
                                                &trans        &trans            &trans          &mo 3          &trans              &trans
            >;

            label = "Navigation";
        };

        symbol_layer {
            display-name = "Symbol";

            //
            //  |-------------------------------------------------------------------------| |---------------------------------------------------------------|
            //  | ESC     | !       | @             | #             | $        | %        | | ^      | &        | *             | (       | )    | BKSP     |
            //  | LCTRL   |         |               |               |          |          | | -      | =        | {             | }       | "|"  | `        |
            //  | LSHFT   |         |               |               |          |          | | _      | +        | [             | ]       | \    | ~        | // TODO: Fix this row when &mkp is committed
            //  |-----------------------------------| LGUI          |          | SPACE    | | RET    |          | RALT          |---------------------------|
            //                                      |-------------------------------------| |-----------------------------------|

            bindings = <
&kp DEL         &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GT     &kp PLUS   &kp BSPC
&kp UNDERSCORE  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPS       &kp ASTRK  &kp MINUS  &kp EQUAL
&kp LEFT        &kp N6    &kp N7  &kp N8    &kp N9    &kp N0       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp CARET      &kp PIPE   &kp BSLH   &kp RIGHT
                                  &trans    &trans    &mo 3        &trans                &trans                 &trans
            >;
        };

        kb_bt_layer {
            bindings = <
&bt BT_CLR_ALL   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &trans           &trans             &trans  &trans  &trans  &trans  &trans  &trans
&bl BL_TOG       &bl BL_INC       &bl BL_DEC       &bl BL_CYCLE     &trans           &trans             &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD    &trans  &trans  &trans  &trans  &trans  &trans
                                                   &trans           &trans           &trans
            >;

            label = "Let_BT";
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
